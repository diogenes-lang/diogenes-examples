
package it.unica.co2.auto.forte

honesty Store Buyer Distributor

contract C {
	order? string . ( amount! int (+) abort! )
}

contract D {
	req! string . ( ok? + no? )
}

specification Pdishonest {
	tell x C .
	receive@x order?[v:string] . (  
		tell y D . (
			send@y req![v] . 
			receive {
				@y ok? -> send@x amount![*:int]
				@y no? -> send@x abort!
				after * -> send@x abort! 
			}
		)
		after * -> send@x abort!
	)
	
}

specification Store {
	tell x C .
	receive@x order?[v:string] . 
	tell y D . 
		send@y req![*:string] . 
		receive {
			@y ok? -> send@x amount![*:int]
			@y no? -> send@x abort!
			after * -> send@x abort! . receive@y ok? no?	
		}
	after * -> send@x abort!
	
}

specification Buyer {
	tellAndReturn x { order! string . ( amount? int + abort? ) } .
	send@x order![*:string] .
	receive {
		@x amount?[n:int]
		@x abort?
	}
}

specification Distributor {
	tell x { req? string . ( ok! (+) no! ) } .
	receive@x req?[msg:string] .
	if *:boolean
	then send@x ok!
	else send@x no!
}

